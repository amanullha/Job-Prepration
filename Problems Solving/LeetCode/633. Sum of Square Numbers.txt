// approach 1 

class Solution {
public:
    bool judgeSquareSum(int c) {
        if(c==1 || c==2 || c==0)return true;
        
        bool f=false;
        long long n=c;
        for(long long i=1;i*i<=n;i++){
            
            long long x=n-(i*i);
           
            bool flag=findRoot(x);
             //cout<<"i "<<i<<" i*i: "<<i<<" x "<<x<<" flag "<<flag<<endl;
            if(flag){
                f=true;
                break;
            }
        }
    
    return f;
    }
    
    bool findRoot(long long x){
        
        long long l=1,r=x;
        int cholbe=200;
        
        while(cholbe--){
            
            long long mid=(l+r)/2;
            
            long long root=mid*mid;
            
            if(root==x)return true;
            
            if(root>x)r=mid-1;
            else l=mid;
        }
        
    if(r*r==x || l*l==x)return true;
    
    else return false;
    }
};


// approach 2

class Solution {
public:
    bool judgeSquareSum(int c) {
    long long n=c;
    for(long long i=0;i*i<=n;i++)
    {
        if(sq(n-(i*i)))return true;
    }
    return false;
    }
    bool sq(long long n)
    {
        long long x=sqrtl(n);
        
        return x*x==n;
    }
};