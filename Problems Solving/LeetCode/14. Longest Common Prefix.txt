/*
Solution 1: 

Time complexity: O(ArrayLength*StringLength)
Memory Complexity: O(1)

*/


class Solution {
public:
    string longestCommonPrefix(vector<string>& strs) {

        bool match=true;
        int i=0;
        
        string s=strs[0];
        
        while(i<s.size()){
            
            for(string ss:strs){
                
                if(ss[i]!=s[i]){
                    match=false;
                    break;
                }
            }
            if(!match){
                break;
            }
            i++;
        }
        return s.substr(0,i);
    }
};


/*
Solution: 2


Time complexity: O(ArrayLength*StringLength)
Memory Complexity: O(1)
*/


class Solution {
public:
    
    string matchLen(string s1,string s2){
        int i=0;
        int s=min(s1.size(),s2.size());
        while(i<s){
            if(s1[i]==s2[i])i++;
            else break;
        }
    return s1.substr(0,i);
    }
    
   string longestCommonPrefix(vector<string>& strs) {
    
       string matchStr=strs[0];
       
       for(int i=1;i<strs.size();i++)
       {
           matchStr=matchLen(matchStr,strs[i]);
       }
    
        return matchStr;
    }
};