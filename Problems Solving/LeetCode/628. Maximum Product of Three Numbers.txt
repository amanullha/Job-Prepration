// solution with C++

class Solution {
public:
    int maximumProduct(vector<int>& nums) {
        sort(nums.begin(),nums.end());
        
        int l=nums.size()-1;
        
        int firstThreeNbr=nums[0]*nums[1]*nums[2];
        int lastThreeNbr=nums[l-2]*nums[l-1]*nums[l];
        int firstTwoAndLastOne=nums[0]*nums[1]*nums[l];
        
        return max({firstThreeNbr,lastThreeNbr,firstTwoAndLastOne});
    }
};

// solution with JavaScript

/**
 * @param {number[]} nums
 * @return {number}
 */
var maximumProduct = function(nums) {
    
        nums.sort(function(a, b){return a - b});
        
        let l=nums.length-1;
        
        let firstThreeNbr=nums[0]*nums[1]*nums[2];
        let lastThreeNbr=nums[l-2]*nums[l-1]*nums[l];
        let firstTwoAndLastOne=nums[0]*nums[1]*nums[l];
        
        return Math.max(firstThreeNbr,lastThreeNbr,firstTwoAndLastOne);
};