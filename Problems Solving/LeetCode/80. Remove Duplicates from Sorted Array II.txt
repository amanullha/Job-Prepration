// solutioin 1

class Solution {
public:
    int removeDuplicates(vector<int>& nums) {
        
        int n=nums.size();
        if(n<=2)return n;
        
        int last=nums[0];
        bool f=1;
        int z=0;
        int M=-100005;
        for(int i=1;i<n;i++){
            
            int &x=nums[i];
            
            if(x==last and f){
                f=0;
            }
            else if(x==last and !f){
                
                x=M;
                z++;
            }
            else if(x!=last){
                last=x;
                f=1;
            }
        }
    
    int i=0,j=0;
        
        while(i<n)
        {
            if(nums[i]!=M){
                swap(nums[i],nums[j]);
                j++;
            }
            i++;
        }
        
    return j;
    }
};



// solutioin 2

class Solution {
public:
    int removeDuplicates(vector<int>& nums) {
        
        int n=nums.size();
        if(n<=2)return n;
        int M=-100005;
        int last=M;
        bool f=1;
        int z=0;
        int jj=0;
        for(int i=0;i<n;i++){
            
            int &x=nums[i];
            
            if(x==last and f){
                f=0;
            }
            else if(x==last and !f){
                
                x=M;
                z++;
            }
            else if(x!=last){
                last=x;
                f=1;
            }
            
            if(nums[i]!=M){
                swap(nums[i],nums[jj]);
                jj++;
            }
            
        }
        
        
    
 
        
    return jj;
    }
};