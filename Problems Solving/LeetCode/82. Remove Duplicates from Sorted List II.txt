/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* deleteDuplicates(ListNode* head) {
        
    ListNode* prevNode=new ListNode(0,head);
    ListNode* returnNode=prevNode;
    
        while(head!=NULL){
            
            if(head->next!=NULL and head->val == head->next->val){
                
                while(head->next!=NULL and head->val == head->next->val){
                    
                    head=head->next;
                }
                prevNode->next=head->next;
                head=head->next;
            }
            else{
                
                prevNode=prevNode->next;
                head=head->next;
            }
        }
        
        
      return returnNode->next;  
    }
};